{"version":3,"file":"static/js/491.982e84d3.chunk.js","mappings":"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","sources":["components/Main/Main.styled.js","components/Main/Main.jsx","redux/contacts/contactSelectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ButtonDelete/ButtonDelete.styled.js","components/ButtonDelete/ButtonDelete.jsx","redux/filter/filterSelector.js","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst Main = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 10px;\n  width: 600px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  font-size: 24px;\n  color: #010101;\n`;\nexport default Main;","import Main from \"./Main.styled\"\n\nexport const MainContainer = ({ children }) => (\n  <Main>\n    {children}\n  </Main>\n);\n","export const selectItems = state => state.contacts.items;\nexport const selectLoading = state => state.contacts.isLoading;","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  padding: 15px 10px;\n  width: 500px;\n  border: 5px solid black;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  width: 50%;\n  height: 30px;\n  font-size: 24px;\n`;\n\nexport const Paragraph = styled.p`\nmargin-top: 10px;\nmargin-bottom: 10px;\nfont-size: 24px;\n`\n\nexport const ButtonSubmit = styled.button`\n  margin-top: 10px;\n  display: block;\n  padding: 10px 15px;\n  width: 30%;\n  font-size: 16px;\n  background-color: black;\n  color: white;\n  border: 2px solid black;\n  border-radius: 7px;\n  cursor: pointer;\n  transition: color 250ms linear, background-color 250ms linear;\n  &:hover {\n    color: black;\n    background-color: white;\n  }\n`;\n\n","// import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\n\nimport toast, { Toaster } from 'react-hot-toast';\nimport { selectItems } from 'redux/contacts/contactSelectors';\nimport { selectLoading } from 'redux/contacts/contactSelectors';\n\nimport { Form, Input, Paragraph, ButtonSubmit } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectItems);\n  const isLoading = useSelector(selectLoading);\n\n  const handleChange = e => {\n    switch (e.currentTarget.name) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(e.currentTarget.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const formSubmitHandle = data => {\n    if (contacts.filter(contact => contact.name === data.name).length > 0) {\n      toast.error(`${name} is already exists`);\n      return;\n    }\n    dispatch(addContact(data));\n  };\n\n  const clickOnBtnSubmit = e => {\n    e.preventDefault();\n    formSubmitHandle({ name, number });\n    reset();\n  };\n\n  return (\n    <Form onSubmit={clickOnBtnSubmit}>\n      <label title=\"Name\">\n        <Paragraph>Name</Paragraph>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter name\"\n          onChange={handleChange}\n          value={name}\n        />\n      </label>\n      <label title=\"Number\">\n        <Paragraph>Number</Paragraph>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"123-45-67\"\n          onChange={handleChange}\n          value={number}\n        />\n      </label>\n      <ButtonSubmit type=\"submit\" disabled={isLoading}>\n        Add contact\n      </ButtonSubmit>\n      <Toaster position=\"top-right\" />\n    </Form>\n  );\n};\n","import styled from \"@emotion/styled\"\n\nexport const ContactsItem = styled.div`\n  & p {\n    margin-bottom: 5px;\n  }\n  & ul {\n    margin-top: 10px;\n  }\n  & li {\n    font-size: 22px;\n  }\n`;\n\n// export const ButtonDelete = styled.button`\n//   margin-top: 10px;\n//   margin-left: 10px;\n//   padding: 5px 10px;\n//   font-size: 16px;\n//   background-color: black;\n//   color: white;\n//   border: 2px solid black;\n//   border-radius: 7px;\n//   cursor: pointer;\n//   transition: color 250ms linear, background-color 250ms linear;\n//   &:hover {\n//     color: black;\n//     background-color: white;\n//   }\n// `;\n\n","import styled from '@emotion/styled';\n\nexport const ButtonDeleteStyled = styled.button`\n  margin-top: 10px;\n  margin-left: 10px;\n  padding: 5px 10px;\n  font-size: 16px;\n  background-color: black;\n  color: white;\n  border: 2px solid black;\n  border-radius: 7px;\n  cursor: pointer;\n  transition: color 250ms linear, background-color 250ms linear;\n  &:hover {\n    color: black;\n    background-color: white;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { ButtonDeleteStyled } from './ButtonDelete.styled';\nimport { selectLoading } from 'redux/contacts/contactSelectors';\n\nexport const ButtonDelete = ({ id }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n\n  return (\n    <ButtonDeleteStyled\n      type=\"button\"\n      name=\"Delete\"\n      id={id}\n      onClick={() => dispatch(deleteContact(id))}\n      disabled={isLoading}\n    >\n      {isLoading ? 'Deleting...' : 'Delete'}\n    </ButtonDeleteStyled>\n  );\n};\n\nButtonDelete.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n","export const selectFilter = state => state.filter;","import { ContactsItem } from \"./ContactList.styled\";\nimport { ButtonDelete } from \"components/ButtonDelete/ButtonDelete\";\n\nimport { useSelector } from \"react-redux\";\n\nimport { selectItems } from \"redux/contacts/contactSelectors\";\nimport { selectFilter } from \"redux/filter/filterSelector\";\n\n\nexport const ContactList = () => {\n  const data = useSelector(selectItems);\n  // console.log(data);\n  const filter = useSelector(selectFilter);\n  // console.log(filter);\n  const normolizeFilter = filter.toLowerCase();\n  const visibleContacts = data.filter(contact =>\n    contact.name.toLowerCase().includes(normolizeFilter)\n  );\n\n  return (\n    <ContactsItem>\n      <ul>\n        {visibleContacts.map(data => (\n          <li key={data.id}>\n            <span>\n              {data.name}: {data.number}\n            </span>\n            <ButtonDelete id={data.id} />\n          </li>\n        ))}\n      </ul>\n    </ContactsItem>\n  );\n};\n","import { MainContainer } from 'components/Main/Main';\n\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nimport { selectItems } from 'redux/contacts/contactSelectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const data = useSelector(selectItems);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <MainContainer title=\"Phonebook\">\n      <h1>Phonebook</h1>\n\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <div>{data && 'Phonebook is empty...'}</div>\n      <ContactList name=\"Contacts\" />\n    </MainContainer>\n  );\n}\n"],"names":["styled","MainContainer","children","selectItems","state","contacts","items","selectLoading","isLoading","Form","Input","Paragraph","ButtonSubmit","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","e","currentTarget","value","onSubmit","data","preventDefault","filter","contact","length","toast","addContact","title","type","pattern","required","placeholder","onChange","disabled","position","ContactsItem","ButtonDeleteStyled","ButtonDelete","id","onClick","deleteContact","selectFilter","ContactList","normolizeFilter","toLowerCase","visibleContacts","includes","map","ContactsPage","useEffect","fetchContacts"],"sourceRoot":""}